stupidArray_orig=[
117,       206,       328,       355,       415,       419,      1050,      1202,
1270,      1298,      1364,      1482,      1541,      1565,      1761,      2154,
2285,      2454,      2663,      2692,      2813,      3282,      3620,      3894,
4380,      4575,      4671,      4692,      4719,      4737,      4761,      4963,
5182,      5434,      5530,      5541,      5654,      5803,      5866,      6064,
6094,      6211,      6417,      6500,      6567,      6723,      6728,      6793,
6923,      7026,      7122,      7263,      7364,      7648,      8176,      8269,
8336,      8364,      8662,      8749,      8875,      9190,      9237,      9451,
9455,      9515,     10103,     10208,     10291,     10445,     10624,     10831,
10888,     10892,     10928,     10955,     10974,     11044,     11073,     11126,
11141,     11279,     11305,     11488,     11535,     11679,     11709,     11809,
1872,     12209,     12392,     12856,     13059,     13063,     13100,     13133,
13162,     13226,     13276,     13319,     13495,     13594,     13654,     13687,
13863,     13883,     13974,     14063,     14399,     14461,     14561,     14680,
14721,     15038,     15051,     15172,     15301,     15532,     15666,     15926,
16103,     16120,     16367,     16387,     16459,     16491,     16680,     16821,
16919,     17083,     17156,     17205,     17385,     17732,     17867,     18087,
18174,     18181,     18200,     18277,     18331,     18481,     18615,     18664,
18923,     19018,     19029,     19212,     19219,     19362,     20141,     20562,
20581,     21117,     21166,     21448,     22066,     22085,     22177,     22397,
22561,     22678,     22952,     23178,     23188,     23257,     23313,     23342,
23597,     24055,     24120,     24122,     24136,     24154,     24515,     24545,
25050,     25083,     25356,     25362,     25583,     25719,     25896,     25987,
26019,     26067,     26249,     26255,     26288,     26395,     26524,     27015,
27121,     27186,     27270,     27372,     27390,     27469,     27526,     27553,
27716,     27842,     27855,     27881,     28062,     28175,     28325,     28609,
29102,     29216,     29291,     29358,     29527,     29563,     29674,     29701,
29736,     29762,     29948,     29978,     30058,     30103,     30340,     30543,
30601,     30674,     30752,     30759,     30793,     30829,     30930,     31073,
31140,     31227,     31310,     31446,     31720,     31781,     31902,     31905,
32092,     32106,     32137,     32157,     32356,     32457,     32508,     32511,
32600,     32753,     32830,     32840,     33061,     33161,     33410,     33512,
33624,     34101,     34251,     34426,     34434,     34743,     34885,     34969,
35003,     35302,     35505,     35544,     35987,     36090,     36109,     36125,
36134,     36178,     36206,     36412,     36415,     36483,     36615,     36665,
36787,     36815,     37283,     37335,     38003,     38139,     38285,     38356,
38500,     38732,     39075,     39179,     39196,     39268,     39274,     39691,
40098,     40145,     40439,     40467,     40519,     40533,     40534,     40747,
40755,     40774,     41028,     41219,     41299,     41344,     41379,     41419,
41495,     41507,     41559,     41603,     41614,     41794,     41835,     42071,
42227,     42255,     42474,     42782,     43143,     43403,     43683,     43813,
43922,     44357,     44372,     44499,     44529,     44552,     44608,     44744,
44788,     44839,     44954,     44998,     45018,     45094,     45099,     45101,
45350,     45417,     45554,     45599,     45624,     45875,     45965,     46002,
46157,     46161,     46167,     46191,     46379,     46423,     46453,     46523,
46558,     46683,     46693,     46720,     46996,     47011,     47038,     47050,
47104,     47123,     47227,     47254,     47324,     47699,     47785,     47895,
48061,     48148,     48263,     48547,     48686,     48712,     48888,     48891,
48931,     48971,     49068,     49114,     49124,     49164,     49188,     49808,
50083,     50262,     50545,     50590,     50820,     50963,     51268,     51353,
51366,     51369,     51416,     51496,     51823,     52074,     52330,     52369,
52732,     52781,     52866,     52881,     53072,     53539,     53556,     53656,
53692,     53788,     53827,     54076,     54261,     54374,     54399,     54458,
54623,     54669,     54683,     54685,     54753,     54889,     55164,     55263,
55268,     55288,     55351,     55426,     55456,     55547,     55583,     56139,
56248,     56405,     56432,     56535,     56554,     56598,     56603,     56710,
56966,     57260,     57332,     57479,     57788,     57803,     57807,     57835,
57997,     58088,     58287,     58339,     58354,     58432,     58513,     58561,
58682,     58834,     58934,     58965,     58981,     59420,     59504,     59512,
59531,     59724,     59996,     60129,     61011,     61288,     61413,     61474,
61544,     61692,     61719,     61990,     62121,     62191,     62258,     62405,
62430,     62432,     62442,     62521,     62539,     62628,     62782,     62921,
63041,     63079,     63294,     63385,     63492,     64128,     64141,     64157,
64182,     64209,     64287,     64296,     64316,     64564,     64755,     64980,
65268,     65334,     65462,     65508,     65800,     65958,     65999,     66347,
66427,     66592,     66783,     67082,     67165,     67329,     67429,     67696,
67840,     67853,     67885,     68040,     68203,     68264,     68819,     69148,
69151,     69221,     69384,     69555,     69615,     69635,     69637,     69709,
69910,     69951,     70037,     70209,     70631,     70986,     71040,     71178,
71306,     71607,     71670,     71825,     72074,     72078,     72108,     72186,
72839,     72880,     72882,     72933,     73451,     73795,     73966,     74117,
74369,     74536,     74542,     74746,     74792,     74953,     74982,     75032,
75390,     75402,     75406,     75560,     75725,     75766,     75801,     75950,
76025,     76051,     76064,     76089,     76098,     76275,     76324,     76385,
76439,     76479,     76492,     76499,     77058,     77134,     77300,     77452,
77663,     77740,     77827,     77928,     77972,     78238,     78299,     78372,
78573,     78574,     78591,     78610,     78648,     78833,     78970,     78984,
79182,     79297,     79417,     79546,     79893,     80064,     80162,     80347,
80522,     80598,     80654,     80679,     80746,     81026,     81314,     81320,
81329,     81399,     81402,     81635,     81664,     81692,     81788,     81986,
82072,     82643,     82679,     82978,     82997,     83050,     83094,     83394,
83534,     83965,     83993,     84162,     84188,     84346,     85031,
]

def num2thang(num): # 914243DECEBJaaaa
	out = str(num)
	while num:
		out += str('ABCDEFGHIJKLMNOPQRS'[num%10])
		num/=10
	out += 'a'*(16-len(out))
	return out
# UNIT TESTS!!!!!!!
assert num2thang(914243)=='914243DECEBJaaaa'

from Crypto.Cipher import AES
ciphertext='b0234db3e7823748303290fb70cd9eb220574e1e031f9741c332af2147396bc59e6a48b8dbce4606362102c977a185a69ebdf5f2bc967552f09f1ba49bb15753'.decode("hex")
iv='1234123412341234'
key = num2thang(10700)
assert key == '10700AAHABaaaaaa'
cipher = AES.new(key, AES.MODE_CBC, iv)
plain = cipher.decrypt(ciphertext)
assert plain.encode('hex') == '47e964c438d343a2f82b6d925b73bfabbd1874122f1e788e7120a7c04399e77afe01952bf5431d5cc2af928dfe6eb68527af4e4032b2aba136e79dca254b9a75'

#bruteforce 1
for stupid in range(0, 10000000):
	if stupid > 10000 and ('%d'%(stupid,))[2] == '7' and ('%d'%(stupid,))[3] == '0':
		thang = num2thang(stupid)
		# print thang

		key = thang
		cipher = AES.new(key, AES.MODE_CBC, iv)
		plain = cipher.decrypt(ciphertext)
		if 'INS{' in plain:
			print plain

#bruteforce 2
for unk1 in range(0x30,256):
	for unk2 in range(0,256):

		stupidArray = stupidArray_orig[:]
		pwFirst = unk1 - 0x30 # arg2_copy[(signed int)constant_func_0x00()] - '0'
		pw2a = pwFirst + stupidArray[unk2] + 634;
		stupidSum =892360 + pw2a;# sum_with_xor return 892360
		for i in range(0, 655):
		    stupidArray[i] += stupidSum;
		for i,stupid in enumerate(stupidArray):
			if ('%d'%(stupid,))[2] == '7' and ('%d'%(stupid,))[3] == '0' and stupid > 10000:
				# print unk1,unk2,i,stupid
				thang = num2thang(stupid)
				# print thang

				key = thang
				cipher = AES.new(key, AES.MODE_CBC, iv)
				plain = cipher.decrypt(ciphertext)
				if 'INS{' in plain:
					print plain
				# print ciphertext